% вариант 22
%% номер 1 (определение оптимальной степени полинома)
clc, clearvars, close all;

% (числа сгенерированы)
% x_exp = [0.1, 1.0, 1.8, 2.5, 3.6, 4.5, 5.2, 6.5, 8.0];
y_exp = [-0.8, -0.6, -0.3, 0.0, 0.4, 0.7, 0.8, 0.5, -0.2];
% x_nodal = [2.87 3.39]; 


f = 0;
dMin = abs(max(y_exp) - min(y_exp));
for i = 1:(length(y_exp) - 2)
    y = diff(y_exp, i);
    if (dMin > abs(min(max(y) - min(y))))
        dMin = abs(min(max(y) - min(y)));
        f = i;
    end
end

fprintf('Оптимальна разность %d порядка, с отличием max и min в %f\n', f, dMin);
disp(diff(y_exp, f));
fprintf('Оптимальная степень полинома: %d\n', f);
%% номер 2 (Построение аппроксимационного полинома без учёта
%  весовых коэффициентов с использованием
%  определителя Вандермонда)
clc, clearvars, close all;
x_exp = [0.1, 1.0, 1.8, 2.5, 3.6, 4.5, 5.2, 6.5, 8.0];
y_exp = [-0.8, -0.6, -0.3, 0.0, 0.4, 0.7, 0.8, 0.5, -0.2];
% x_nodal = [2.87 3.39]; 

% f = 3;
W = vander(x_exp);
W = W(:, 2:end);
A = W' * W;
b = W' * y_exp';
a = inv(A)*b;

x = linspace(min(x_exp), max(x_exp), 1e4);
y = polyval(a, x);

figure(1); hold on;
plot(x, y, 'k', LineWidth = 1), 
plot(x_exp, y_exp, 'm*'), yline(0, 'k--');
title('y = f(x) Аппроксимация через матрицу Вандермонда'), xlabel('x'), ylabel('y'), grid on, xticks(ceil(min(x_exp)) - 1:0.5:ceil(max(x_exp)) + 1), yticks(ceil(min(y_exp)) - 1:0.1:ceil(max(y_exp)) + 1), legend('approx', 'exp');

%% номер 3 (Аппроксимация стандартными функциями матлаб)
clc, clearvars, close all;
x_exp = [0.1, 1.0, 1.8, 2.5, 3.6, 4.5, 5.2, 6.5, 8.0];
y_exp = [-0.8, -0.6, -0.3, 0.0, 0.4, 0.7, 0.8, 0.5, -0.2];
% x_nodal = [2.87 3.39]; 



coefs_0 = polyfit(x_exp, y_exp, 0);
coefs_1 = polyfit(x_exp, y_exp, 1);
coefs_2 = polyfit(x_exp, y_exp, 2);
coefs_3 = polyfit(x_exp, y_exp, 3);
coefs_4 = polyfit(x_exp, y_exp, 4);

y_0 = polyval(coefs_0, x_exp);
y_1 = polyval(coefs_1, x_exp);
y_2 = polyval(coefs_2, x_exp);
y_3 = polyval(coefs_3, x_exp);
y_4 = polyval(coefs_4, x_exp);

err_0 = sqrt(1/length(x_exp) * sum((y_exp - y_0).^2));
err_1 = sqrt(1/length(x_exp) * sum((y_exp - y_1).^2));
err_2 = sqrt(1/length(x_exp) * sum((y_exp - y_2).^2));
err_3 = sqrt(1/length(x_exp) * sum((y_exp - y_3).^2));
err_4 = sqrt(1/length(x_exp) * sum((y_exp - y_4).^2));

x_plt = linspace(min(x_exp), max(x_exp), 1e4);
y_0_plt = polyval(coefs_0, x_plt);
y_1_plt = polyval(coefs_1, x_plt);
y_2_plt = polyval(coefs_2, x_plt);
y_3_plt = polyval(coefs_3, x_plt);
y_4_plt = polyval(coefs_4, x_plt);

% нулевой степени
subplot(2, 3, 1); hold on;
plot(x_plt, y_0_plt, 'k', LineWidth = 1), 
plot(x_exp, y_exp, 'm*'), yline(0, 'k--');
title('y = f(x) Аппроксимация нулевой степени'), xlabel('x'), ylabel('y'), grid on, xticks(ceil(min(x_exp)) - 1:0.5:ceil(max(x_exp)) + 1), yticks(ceil(min(y_exp)) - 1:0.1:ceil(max(y_exp)) + 1), legend('approx', 'exp');

% первой степени
subplot(2, 3, 2); hold on;
plot(x_plt, y_1_plt, 'k', LineWidth = 1), 
plot(x_exp, y_exp, 'm*'), yline(0, 'k--');
title('y = f(x) Аппроксимация первой степени'), xlabel('x'), ylabel('y'), grid on, xticks(ceil(min(x_exp)) - 1:0.5:ceil(max(x_exp)) + 1), yticks(ceil(min(y_exp)) - 1:0.1:ceil(max(y_exp)) + 1), legend('approx', 'exp');

% второй степени
subplot(2, 3, 3); hold on;
plot(x_plt, y_2_plt, 'k', LineWidth = 1), 
plot(x_exp, y_exp, 'm*'), yline(0, 'k--');
title('y = f(x) Аппроксимация второй степени'), xlabel('x'), ylabel('y'), grid on, xticks(ceil(min(x_exp)) - 1:0.5:ceil(max(x_exp)) + 1), yticks(ceil(min(y_exp)) - 1.4:0.1:ceil(max(y_exp)) + 1), legend('approx', 'exp');

% третей степени
subplot(2, 3, 4); hold on;
plot(x_plt, y_3_plt, 'k', LineWidth = 1), 
plot(x_exp, y_exp, 'm*'), yline(0, 'k--');
title('y = f(x) Аппроксимация третьей (оптимальной) степени'), xlabel('x'), ylabel('y'), grid on, xticks(ceil(min(x_exp)) - 1:0.5:ceil(max(x_exp)) + 1), yticks(ceil(min(y_exp)) - 1:0.1:ceil(max(y_exp)) + 1), legend('approx', 'exp');

% четвёртой степени
subplot(2, 3, 5); hold on;
plot(x_plt, y_4_plt, 'k', LineWidth = 1), 
plot(x_exp, y_exp, 'm*'), yline(0, 'k--');
title('y = f(x) Аппроксимация четвёртой степени'), xlabel('x'), ylabel('y'), grid on, xticks(ceil(min(x_exp)) - 1:0.5:ceil(max(x_exp)) + 1), yticks(ceil(min(y_exp)) - 1:0.1:ceil(max(y_exp)) + 1), legend('approx', 'exp');

%% номер k (Аппроксимация стандартными функциями матлаб)
clc, clearvars, close all;

x_exp = [0.1, 1.0, 1.8, 2.5, 3.6, 4.5, 5.2, 6.5, 8.0];
y_exp = [-0.8, -0.6, -0.3, 0.0, 0.4, 0.7, 0.8, 0.5, -0.2];
p = [0.9 0.8 0.7 0.5 0.9 1 0.7 0.8 0.6];
% x_nodal = [2.87 3.39]; 

k = 3;
sp = spap2(length(x_exp) - k, k, x_exp, y_exp, p);
fnplt(sp, 'r-');hold on;
plot(x_exp, y_exp, 'k*', MarkerSize=8), yline(0, 'k--');
title('y = f(x) Аппроксимация spap2  3ей степени'), xlabel('x'), ylabel('y'), grid on, xticks(ceil(min(x_exp)) - 1:0.5:ceil(max(x_exp)) + 1), yticks(ceil(min(y_exp)) - 1:0.1:ceil(max(y_exp)) + 1), legend('approx', 'exp');

%% номер k+1 (Построить аппроксимационный полином с учётом
%  весовых коэффициентов с использованием функции
%  fminsearch; Оценить точность аппроксимации; Построить на одном графике полученные функций с
%  вынесенными на них узловыми точками в виде звёздочек, разными цветами, добавив легенду.)

clc, clearvars, close all;
x_exp = [0.1, 1.0, 1.8, 2.5, 3.6, 4.5, 5.2, 6.5, 8.0];
y_exp = [-0.8, -0.6, -0.3, 0.0, 0.4, 0.7, 0.8, 0.5, -0.2];
x_nodal = [2.87 3.39]; 

coefs = polyfit(x_exp, y_exp, 3);

y = polyval(coefs, x_exp);
f = @(x) polyval(coefs, x);
[x, fval] = fminsearch(f, min(x_exp));
err = sqrt(1/length(x_exp) * sum((y_exp - y).^2));
err_rel = err/fval*100;
fprintf('Абсолютная погрешность: %.4f\n', err);
fprintf('Максимальная относительная погрешность: %.2f%%\n', err_rel);

x_plt = linspace(min(x_exp), max(x_exp), 1e4);
y_plt = polyval(coefs, x_plt);

% третей степени
figure(1), hold on;
plot(x_plt, y_plt, 'k', LineWidth = 1), 
plot(x_exp, y_exp, 'm*'), 
plot(x_nodal, polyval(coefs, x_nodal), 'r*'),  yline(0, 'k--');
title('y = f(x) Аппроксимация третьей (оптимальной) степени'), xlabel('x'), ylabel('y'), xlim([(min(x_exp) - 1) (max(x_exp) + 1)]), ylim([(min(y_exp) - 0.3) (max(y_exp) + 0.3)]), grid on, xticks(ceil(min(x_exp)) - 1:0.5:ceil(max(x_exp)) + 1), yticks(ceil(min(y_exp)) - 1:0.1:ceil(max(y_exp)) + 1), legend('approx', 'exp', 'nodal');

