import numpy as np
import sympy as sp

# Коэффициенты NASA (низкие T)
a_C2H4 = [4.47039, 0.0294337, -0.0000932121, 1.28208e-07, -5.3026e-11, 50991.3, 2.43131]
a_C6H6 = [2.92230, 0.0367974, 0.00105094, -1.58169e-06, 6.61473e-10, 132289.0, 4.65881]
a_H2   = [2.67992, 0.0317540, -0.0000724769, 8.35104e-08, -3.70898e-11, -917.935, 0.683010]

R = 8.3145  # Дж/моль·К
T = 700     # К

def H(a, T):
    return (
        a[0] +
        a[1] * T / 2 +
        a[2] * T**2 / 3 +
        a[3] * T**3 / 4 +
        a[4] * T**4 / 5 +
        a[5] / T
    ) * R * T

def S(a, T):
    return (
        a[0] * np.log(T) +
        a[1] * T +
        a[2] * T**2 / 2 +
        a[3] * T**3 / 3 +
        a[4] * T**4 / 4 +
        a[6]
    ) * R

# ΔG = ΔH - TΔS
delta_G = (
    H(a_C6H6, T) + (3 * H(a_H2, T)) - H(a_C2H4, T)
) - T * (
    S(a_C6H6, T) +  (3 * S(a_H2, T)) - S(a_C2H4, T)
)

# Расчёт константы равновесия C (в данном контексте, не путать с исходной задачей)
K = np.exp(-delta_G / (R * T))

x_sym = sp.Symbol('x')
sol = sp.solve((x_sym + 1)/((x_sym - 1)**2) - C, x_sym)

# Печатаем
print("ΔG =", delta_G, "Дж/моль")
print("K =", K)
print("Корни уравнения:", sol)
